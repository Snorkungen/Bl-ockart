(()=>{"use strict";function t(t,o,...e){const i=document.createElement(o);return null!==e&&e.length>0&&e.forEach((t=>{if(t){let[o,e]=t.split("=");e=t.split("=").slice(1).join("="),"content"===o?i.textContent=e:i.setAttribute(o,e)}})),t&&t.appendChild(i),i}class o extends HTMLElement{constructor({blockAmount:t,blockSize:o,blockColor:e}){super(),this.blockAmount=t,this.blockSize=o,this.blockColor=e,this.activeColor=this.blockColor}get gap(){return this.currgap}set gap(t){this.currgap=t,this.style.gap=`${this.currgap}px`}getMaximumBlockSize(){let t=window.innerHeight,o=window.innerWidth;this.parentNode&&this.parentNode.navbar&&(t-=this.parentNode.navbar.clientHeight);const e=o<t?o:t;return Math.floor(e/this.blockAmount-2)}setActiveColor(t){return this.activeColor=t,this}forEachBlock(t){for(let o=0;o<this.children.length;o++)for(let e=0;e<this.children[o].children.length;e++)t(this.children[o].children[e],{x:e,y:o})}forEachRow(t){for(let o=0;o<this.children.length;o++)t(this.children[o],{y:o})}}class e extends HTMLElement{constructor({blockSize:t,blockColor:o,index:e}){super(),(e||0===e)&&(this.blockIndex=e),this.colors=[],this.setSize(t),this.setColor(o)}setSize(t){return this.size=t,this.style.width=`${this.size}px`,this.style.height=`${this.size}px`,this}setColor(t){return this.color!==t&&(this.color=t,this.style.background=this.color,this.colors[this.colors.length-1]!==this.color&&(this.colors.push(t),this))}revertColor(){if(!(this.colors.length<=1))return this.colors.pop(),this.setColor(this.colors[this.colors.length-1]),this}}class i extends Array{get first(){return this[0]}get last(){return this[this.length-1]}get lastIndex(){return this.length-1}}class s extends o{constructor({blockAmount:t,blockSize:o,blockColor:e}){super({blockAmount:t,blockSize:o,blockColor:e}),this.setBlocks(this.blockAmount)}setBlocks(t){for(let o=0;o<t;o++)this.appendChild(new e({blockSize:this.blockSize,blockColor:this.blockColor,index:o}))}}class r extends o{constructor({blockAmount:t,blockSize:o,blockColor:e}){super({blockAmount:t,blockSize:o,blockColor:e}),this.activeColor=this.blockColor,this.baseColor=this.blockColor,this.history=new class{constructor(t={}){this.history=new i,this.maxHistoryLength=t.maxHistoryLength||40,this.dragLength=t.dragLength||10,this.dragColor=null,this.lastFillIndex=null}remove(){return this.history.pop(),this}trimHistory(){this.history.length>this.maxHistoryLength&&this.history.shift()}click(t){return this.history.push([t]),this.trimHistory()}drag(t){if(this.history.last){const o=this.history.last;if(o.length<this.dragLength&&o[o.length-1].color==this.dragColor)return o.push(t),this.trimHistory()}return this.dragColor=t.color,this.history.push([t]),this.trimHistory()}fill(t){if(null!==this.lastFillIndex){const o=this.history[this.lastFillIndex];if(o)return o.push(t),this.trimHistory();console.error("Some random error if i cant debug")}return this.history.push([t]),this.lastFillIndex=this.history.lastIndex,this.trimHistory()}fillReset(){this.lastFillIndex=null}get state(){return this.history.last}},this.setRows(this.blockAmount),this.setGap(0),this.addEventListener("mousedown",this.clickHandler),this.addEventListener("mouseover",this.mouseOverHandler),this.addEventListener("dragstart",(t=>t.preventDefault())),this.addEventListener("contextmenu",(t=>t.preventDefault())),document.addEventListener("keydown",(t=>{t.ctrlKey&&"z"===t.key&&this.revertHistory()}))}setRows(t){for(let o=0;o<t;o++)this.blockAmount=t,this.appendChild(new s({blockAmount:this.blockAmount,blockColor:this.blockColor,blockSize:this.blockSize}));return this}scaleBlocks(t){this.forEachBlock((o=>{o.setSize(t)}))}scaleBoard(t){if(t>0)this.forEachRow((o=>{for(let i=0;i<t;i++)o.appendChild(new e({blockSize:this.blockSize,blockColor:this.blockColor,index:this.blockAmount+i}))})),this.appendChild(new s({blockAmount:this.blockAmount+t,blockColor:this.blockColor,blockSize:this.blockSize}));else{this.forEachRow((o=>{for(let e=0;e<-1*t;e++)o.children[o.children.length-1].remove()}));for(let o=0;o<-1*t;o++)this.children[this.children.length-1].remove()}return this.blockAmount+=t,this.setGap(this.currgap),this.scaleBlocks(this.getMaximumBlockSize())}saveBoardState(){const t=[];return this.forEachBlock(((o,{x:e,y:i})=>{t.push({x:e,y:i,color:o.color,colors:o.colors})})),t}toggleGap(){let t=0;return 0===this.gap&&(t=1),this.setGap(t)}revertHistory(){return(this.history.state?this.history.state:[]).forEach((t=>t.revertColor())),this.history.remove(),this}setGap(t){this.gap=t,this.forEachRow((o=>{o.gap=t}))}setUpdateActiveColorFunction(t){this.updateActiveColor=t}copyColor({target:t}){return this.setActiveColor(t.color),this.updateActiveColor&&this.updateActiveColor(t.color),this}clickHandler(t){if("sk-block"===t.target.localName)return t.ctrlKey?this.fillColor(t.target):!t.ctrlKey&&t.shiftKey?this.copyColor(t):(t.target.setColor(this.activeColor)&&this.history.click(t.target),this)}mouseOverHandler(t){if("sk-block"===t.target.localName&&t.buttons)return t.target.setColor(this.activeColor)&&this.history.drag(t.target),this}wheelHandler(t){if(!t.shiftKey)return this;const o=this.getMaximumBlockSize();return this.blockSize+=t.deltaY<0?4:-4,o<this.blockSize||10>this.blockSize?this:void this.forEachBlock((t=>{t.setSize(this.blockSize)}))}fillRowColor(t,o,e){const i=t.color;t.setColor(o),e.fill(t),function t(s){if(s&&s.color===i)return s.setColor(o)&&e.fill(s),t(s.nextSibling)}(t.nextSibling),function t(s){if(s&&s.color===i)return s.setColor(o)&&e.fill(s),t(s.previousSibling)}(t.previousSibling)}fillColor(t){const o=t.color,e=this.activeColor,i=t.blockIndex,s=this.history,r=this.fillRowColor;this.fillRowColor(t,e,s),function t(l){if(!l)return;const h=l.children[i];return h.color===o?(r(h,e,s),t(l.nextSibling)):void 0}(t.parentNode.nextSibling),function t(l){if(!l)return;const h=l.children[i];return h.color===o?(r(h,e,s),t(l.previousSibling)):void 0}(t.parentNode.previousSibling),this.history.fillReset()}__initState(t){this.scaleBoard(t.size-this.blockAmount);for(let o=0;o<t.blockValues.length;o++){const{x:e,y:i,color:s,colors:r}=t.blockValues[o];this.children[i].children[e].setColor(s),this.children[i].children[e].colors=r}}}class l{constructor(t){this.key=t,this.state.forEach(((t,o)=>{this[o]=t}))}updateBoard(t,o){const e=this.state;return e[t]=o,this[t]=o,localStorage.setItem(this.key,JSON.stringify(e))}deleteBoard(t){const o=this.state;return o[t]=null,this[t]=null,localStorage.setItem(this.key,JSON.stringify(o))}saveNewBoard(t){const o=this.state;return o.push(t),this[o.length]=t,localStorage.setItem(this.key,JSON.stringify(o))}get state(){const t=localStorage.getItem(this.key);return Array.isArray(JSON.parse(t))?JSON.parse(t):[]}get length(){return this.state.length}}function h(t,o){return t.localName===o?t:h(t.parentNode,o)}class n extends o{constructor(t){super(t),this.activeColorBlock=new e(t),this.availableColorsRow=new s({blockSize:t.blockSize,blockColor:t.blockColor,blockAmount:t.paletteColors.length}),this.paletteColors=t.paletteColors,this.setActiveColor(this.paletteColors[0]),this.style.display="flex",this.style.flexDirection="row",this.activeColorBlock.id="activeColorBlock",this.activeColorBlock.setSize(this.getMaximumBlockSize()),this.appendChild(this.activeColorBlock),this.appendChild(this.availableColorsRow),this.forEachBlock(((t,{x:o})=>{t.setSize(this.getMaximumBlockSize()),t.setColor(this.paletteColors[o]),t.addEventListener("click",(({target:t})=>{this.setActiveColor(t.color),this.updateActiveColor&&this.updateActiveColor(t.color)}))}))}resetColorPallette(t){this.paletteColors=t,this.forEachBlock(((t,{x:o})=>t.setColor(this.paletteColors[o]))),this.setActiveColor(this.paletteColors[0])}setUpdateActiveColorFunction(t){this.updateActiveColor=t}setActiveColor(t){return this.activeColor=t,this.activeColorBlock.setColor(t),this}}class c extends o{constructor(o){super(o),this.palletteColorAmount=12,this.paletteColors=new Array(this.palletteColorAmount).fill(0).map((()=>"#"+(16777216+16777215*Math.random()).toString(16).substr(1,6))),this.colorPalette=new n({...o,paletteColors:this.paletteColors}),this.board=new r({...o,blockSize:this.getMaximumBlockSize()}),this.activeColor=this.paletteColors[0],this.colorPalette.setActiveColor(this.activeColor),this.board.setActiveColor(this.activeColor),this.colorPalette.setUpdateActiveColorFunction((t=>(this.setActiveColor(t),this.board.setActiveColor(t),this))),this.board.setUpdateActiveColorFunction((t=>(this.setActiveColor(t),this.colorPalette.setActiveColor(t),this))),this.navbar=t(this,"nav","id=blockArtNavbar"),this.funcButtonContainer=t(this.navbar,"div","id=funcButtonContainer"),t(this.funcButtonContainer,"button","content=Toggle Gap").addEventListener("click",(t=>h(this,"sk-bl-ockart").board.toggleGap())),t(this.funcButtonContainer,"button","content=Save Board").addEventListener("click",this.saveBoard),t(this.funcButtonContainer,"button","content=Scale +").addEventListener("click",(t=>h(this,"sk-bl-ockart").board.scaleBoard(1))),t(this.funcButtonContainer,"button","content=Scale -").addEventListener("click",(t=>h(this,"sk-bl-ockart").board.scaleBoard(-1))),this.navbar.appendChild(this.colorPalette),this.appendChild(this.board),this.board.toggleGap()}__initState(t){this.colorPalette.resetColorPallette(t.paletteColors),this.board.__initState(t)}saveBoard(t){const o=h(this,"sk-bl-ockart"),e={size:o.board.blockAmount,paletteColors:o.paletteColors,gap:o.board.gap,blockValues:o.board.saveBoardState()},i=new l("BoardStates"),s=window.location.search;if(s){const t=s.substr(1).split("id=")[1];return i.updateBoard(Number(t),e)}return i.saveNewBoard(e)}}customElements.define("sk-bl-ockart",c),customElements.define("sk-color-palette",n),customElements.define("sk-board",r),customElements.define("sk-block",e),customElements.define("sk-row",s);const a=c,d=document.getElementById("root"),u=new a({blockAmount:40,blockSize:10,blockColor:"#e0e0e0"});d.appendChild(u),new class{constructor(t){this.blockArtBoard=t,this.LcAPi=new l("BoardStates"),this.__initRoute()}__initRoute(){const t=window.location.search;if(!t)return void this.loadRoute(this.LcAPi.length);const o=t.substr(1).split("id=")[1];return this.loadBoard(o)}loadBoard(t){if(!t)return;const o=this.LcAPi[parseInt(t)];o&&this.blockArtBoard.__initState(o)}loadRoute(t){const o=new URL(window.location);o.searchParams.set("id",t),window.history.pushState({},"",o),this.loadBoard(t)}}(u)})();